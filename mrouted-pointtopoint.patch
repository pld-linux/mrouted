diff -durN mrouted-3.9beta3+IOS12.orig/config.c mrouted-3.9beta3+IOS12/config.c
--- mrouted-3.9beta3+IOS12.orig/config.c	Tue Jan  6 02:57:41 1998
+++ mrouted-3.9beta3+IOS12/config.c	Mon Apr 24 16:24:05 2000
@@ -100,16 +100,24 @@
 	flags = ifr.ifr_flags;
 	if ((flags & (IFF_LOOPBACK|IFF_MULTICAST)) != IFF_MULTICAST) continue;
 
+	if (ioctl(udp_socket, SIOCGIFNETMASK, (char *)&ifr) < 0)
+	    log(LOG_ERR, errno, "ioctl SIOCGIFNETMASK for %s", ifr.ifr_name);
+	mask = ((struct sockaddr_in *)&ifr.ifr_addr)->sin_addr.s_addr;
+	subnet = addr & mask;
+
+	/*
+	 * on point-to-point interfaces netmask does not have its usual meaning
+	 */
+	if (flags & IFF_POINTOPOINT){
+	    if (ioctl(udp_socket, SIOCGIFDSTADDR, (char *)&ifr) < 0)
+	        log(LOG_ERR, errno, "ioctl SIOCGIFDSTADDR for %s", ifr.ifr_name);
+	    subnet = ((struct sockaddr_in *)&ifr.ifr_addr)->sin_addr.s_addr;
 	/*
 	 * Ignore any interface whose address and mask do not define a
 	 * valid subnet number, or whose address is of the form {subnet,0}
 	 * or {subnet,-1}.
 	 */
-	if (ioctl(udp_socket, SIOCGIFNETMASK, (char *)&ifr) < 0)
-	    log(LOG_ERR, errno, "ioctl SIOCGIFNETMASK for %s", ifr.ifr_name);
-	mask = ((struct sockaddr_in *)&ifr.ifr_addr)->sin_addr.s_addr;
-	subnet = addr & mask;
-	if (!inet_valid_subnet(subnet, mask) ||
+	} else if (!inet_valid_subnet(subnet, mask) ||
 	    addr == subnet ||
 	    addr == (subnet | ~mask)) {
 	    log(LOG_WARNING, 0,
@@ -154,7 +162,7 @@
 	strncpy(v->uv_name, ifr.ifr_name, IFNAMSIZ);
 
 	if (flags & IFF_POINTOPOINT)
-	    v->uv_flags |= VIFF_REXMIT_PRUNES;
+	    v->uv_flags |= VIFF_REXMIT_PRUNES | IFF_POINTOPOINT;
 
 	log(LOG_INFO,0,"installing %s (%s on subnet %s) as vif #%u - rate=%d",
 	    v->uv_name, inet_fmt(addr, s1), inet_fmts(subnet, mask, s2),
diff -durN mrouted-3.9beta3+IOS12.orig/vif.c mrouted-3.9beta3+IOS12/vif.c
--- mrouted-3.9beta3+IOS12.orig/vif.c	Wed Jan 20 06:18:50 1999
+++ mrouted-3.9beta3+IOS12/vif.c	Mon Apr 24 16:27:10 2000
@@ -559,6 +559,9 @@
 					      dst == dvmrp_group))
 		    return(vifi);
 	    }
+	    else if (dst == v->uv_lcl_addr && (v->uv_flags & IFF_POINTOPOINT)) {
+		    return(vifi);
+	    }
 	    else {
 		if ((src & v->uv_subnetmask) == v->uv_subnet &&
 		    ((v->uv_subnetmask == 0xffffffff) ||
@@ -1203,7 +1206,7 @@
      * find_vif() because those types of address are acceptable for some
      * types of IGMP message (such as group membership reports).
      */
-    if (!(v->uv_flags & VIFF_TUNNEL) &&
+    if (!(v->uv_flags & (VIFF_TUNNEL|IFF_POINTOPOINT)) &&
 	(addr == v->uv_lcl_addr ||
 	 addr == v->uv_subnet )) {
 	log(LOG_WARNING, 0,
